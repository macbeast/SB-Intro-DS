library(dplyr)
library(tidyr)
library(dummies)

#Imported the raw data set as a .csv#

refine_originalmac <- read.csv("~/Downloads/refine_originalmac.csv")

#Took a look at the data

str(refine_originalmac)

#First task, clean up the company name spellings. 
#I used regexr.com to create regexs for gsub functions for each name and replaced with the right name in the original company column

refine_originalmac <- refine_originalmac %>% mutate(
  company = gsub(pattern = ".*l.*p.*", replacement = "phillips", ignore.case = TRUE, x = company), 
  company = gsub(pattern = ".*ak.*z.*", replacement = "akzo", ignore.case = TRUE, x = company),
  company = gsub(pattern = "va.*en", replacement = "van houten", ignore.case = TRUE, x = company), 
  company = gsub(pattern = ".*nil.*", replacement = "unilever", ignore.case = TRUE, x = company))

#I then separated product code and number into two new columns using the separate function

refine_originalmac <- refine_originalmac %>% separate(`Product code / number`, c('product_code', 'product_number'), sep = '-')

#to add in a new column that assigns full product category, I firstly created a replica of the product_code column

refine_originalmac$product_category <- refine_originalmac$product_code

#Then I used mutate and gsub again - this time the pattern is easier and not a regex because it's replacing one letter with the full category name

refine_originalmac <- refine_originalmac %>% mutate(
  product_category = gsub(pattern = "p", replacement = "Smartphone", x = product_category),
  product_category = gsub(pattern = "v", replacement = "TV", x = product_category), 
  product_category = gsub(pattern = "x", replacement = "Laptop", x = product_category),
  product_category = gsub(pattern = "q", replacement = "Tablet", x = product_category))

#To merge the address columns together, I used the paste function

refine_originalmac$full_address <- paste(refine_originalmac$address, refine_originalmac$city, refine_originalmac$country, sep = ", ")

#Then to create dummy variables for company and product category I used dummies, a package which I found via a google search for easy ways to create dummies
#I realised after a few mistakes later on that I needed to wrap the company and category dummies in the data frame function as bind_cols (which I needed to do later) only works on data frames. 

companydummy <- data.frame(dummy(refine_originalmac$company))
categorydummy <- data.frame(dummy(refine_originalmac$product_category))  

#I renamed the columns as per the exercise

colnames(companydummy) <- c("company_akzo", "company_phillips", "company_unilever", "company_van_houten")
colnames(categorydummy) <- c("product_laptop", "product_smartphone", "product_tablet", "product_tv")

#Then I used bind_cols to put them all together. 

refine_originalmac <- bind_cols(refine_originalmac, companydummy, categorydummy)

#Then I wrote the resulting data to a new csv file

refine_clean <- refine_originalmac
write.csv(refine_clean, 'refine_clean.csv')

#I checked the structure of the cleaned up data set

str(refine_clean)

#occurs to me that the dummies are integers, not factors. Does this matter?
